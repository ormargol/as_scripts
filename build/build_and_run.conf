PERFORM_FR_BUILD=false
PERFORM_FR_DEPLOY=false
PERFORM_AIR4G_BUILD=false
PERFORM_AIR4G_DEPLOY=false
PERFORM_VER_BUILD=false
PERFORM_VER_DEPLOY=false
MAKEVER_PERFORM_ENODEB_MAKE_CLEAN=true
MAKEVER_PERFORM_ENODEB_MAKE_ALL=true
MAKEVER_PERFORM_ENODEB_MAKE_FSMTDD=false
MAKEVER_PERFORM_ENODEB_MAKE_FSMFDD=false
MAKEVER_PERFORM_ENODEB_MAKE_XLPTDD=false
MAKEVER_PERFORM_ENODEB_MAKE_XLPFDD=false
SW_PATH=/home/omargaliot/shared/omargaliot_workspace/Software
LOGS_PATH=/home/omargaliot
LOCAL_SSH_PRIVATE_KEY_PATH=/home/omargaliot/.ssh/id_rsa
FR_BRANCH=FR6.4.1
AIR4G_BRANCH=sr15.50
SETUP_IP=192.168.12.195
SETUP_USER=admin
SETUP_PASSWORD=HeWGEUx66m=_4!ND
FR_DEPLOY_KRAITIMAGES_P4_CL=164219
VER_BUILD_NUM_BUILD_ADDITION=1000
VER_DEPLOY_TFTP_IP=192.168.10.129
AIR4G_DEPLOY_MIDDLE_PATH=/home/admin/auto_upgrade
AIR4G_DEPLOY_SOURCE_DIR=arm_e2e_ms



FR_PATH=$SW_PATH/Infrastructure/Qualcomm/FSM/QCReleases/current/branches/\
$FR_BRANCH
FR_BUILD_SCRIPTS_PATH=$SW_PATH/Infrastructure/Qualcomm/FSM/scripts
FR_BUILD_LOG_PATH=$LOGS_PATH/build_$FR_BRANCH.log
FR_BUILD_VER_PRODUCT=`echo $FR_BRANCH | sed 's/^..//' | cut -d '.' -f 1`
FR_BUILD_VER_MAJOR=`echo $FR_BRANCH | sed 's/^..//' | cut -d '.' -f 2`
FR_BUILD_VER_MINOR=`echo $FR_BRANCH | sed 's/^..//' | cut -d '.' -f 3`
if [ -z $(find $FR_PATH -maxdepth 1 -name builds) ]; then
    FR_BUILD_VER_BUILD=1000
else
    FR_BUILD_VER_BUILD=`ls $FR_PATH/builds | xargs -L 1 printf "%s\n" | \
cut -d '_' -f 4 | cut -c 1-4 | sort -rn | head -1 | xargs printf "%s+1\n" | \
bc`
fi
FR_BUILD_VERSION=$FR_BUILD_VER_PRODUCT"_"$FR_BUILD_VER_MAJOR"_"\
$FR_BUILD_VER_MINOR"_"$FR_BUILD_VER_BUILD
FR_DEPLOY_VER_PRODUCT=$FR_BUILD_VER_PRODUCT
FR_DEPLOY_VER_MAJOR=$FR_BUILD_VER_MAJOR
FR_DEPLOY_VER_MINOR=$FR_BUILD_VER_MINOR
if $PERFORM_FR_BUILD; then
    FR_DEPLOY_VER_BUILD=$FR_BUILD_VER_BUILD
else
    if [ -z $(find $FR_PATH -maxdepth 1 -name builds) ]; then
        echo "Error! can't deploy FR since there is no build one!"
        exit 1
    else
        FR_DEPLOY_VER_BUILD=`ls $FR_PATH/builds | xargs -L 1 printf "%s\n" | \
cut -d '_' -f 4 | cut -c 1-4 | sort -rn | head -1`
    fi
fi
FR_DEPLOY_VERSION=$FR_DEPLOY_VER_PRODUCT"_"$FR_DEPLOY_VER_MAJOR"_"\
$FR_DEPLOY_VER_MINOR"_"$FR_DEPLOY_VER_BUILD
FR_DEPLOY_KRAITIMAGES_TARGET=$SW_PATH/air4g/branches/$AIR4G_BRANCH/kraitimages/
FR_DEPLOY_SOURCE=$FR_PATH/builds/$FR_DEPLOY_VERSION
AIR4G_PATH=$SW_PATH/air4g/branches/$AIR4G_BRANCH
AIR4G_BUILD_PATH=$AIR4G_PATH/app/build
AIR4G_BUILD_LOG_PATH=$LOGS_PATH/build_$AIR4G_BRANCH.log
AIR4G_DEPLOY_SOURCE_PATH=$AIR4G_PATH/app/obj/$AIR4G_DEPLOY_SOURCE_DIR
VER_BUILD_HISTORY_NUM_TAG=$(cd $AIR4G_PATH && p4 changes -u buildmachine $AIR4G_PATH/...@$(p4 cstat $AIR4G_PATH/...#have | grep change | awk '$3 > x { x = $3 }; END { print x }') -s submitted | grep -v swbuildphy1 | head -1 | cut -d " " -f 7 | cut -c 2-)
VER_BUILD_HISTORY_NUM_MAJOR=`echo $VER_BUILD_HISTORY_NUM_TAG | cut -d "_" -f 2`
VER_BUILD_HISTORY_NUM_MINOR=`echo $VER_BUILD_HISTORY_NUM_TAG | cut -d "_" -f 3`
VER_BUILD_HISTORY_NUM_BUILD=`echo $VER_BUILD_HISTORY_NUM_TAG | cut -d "_" -f 4`
VER_BUILD_NUM_BUILD=`echo $VER_BUILD_HISTORY_NUM_BUILD+$VER_BUILD_NUM_BUILD_ADDITION | bc`
VER_BUILD_NUM_MINOR=$VER_BUILD_HISTORY_NUM_MINOR
VER_BUILD_NUM_MAJOR=$VER_BUILD_HISTORY_NUM_MAJOR
VER_BUILD_NUM_TAG="14_"$VER_BUILD_NUM_MAJOR"_"$VER_BUILD_NUM_MINOR"_"$VER_BUILD_NUM_BUILD
VER_BUILD_TARGET_PATH=$AIR4G_PATH/target
VER_BUILD_LOG_PATH=$LOGS_PATH/build_$VER_BUILD_NUM_TAG.log
